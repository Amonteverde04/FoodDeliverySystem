@page "/Driver-Dashboard"
@inject IConfiguration _config
@inject NavigationManager NavigationManager
@inject User Usr

<link href="css/DriverDashboard.css" rel="stylesheet" />

<div class="page">
    <div class="DriverDashboard">
        <div class="Header">
            <div class="LogoContainer">
                <a href=""><img class="logo" src="/Assets/RestaurantList/EasyMealLogo.svg" alt="EasyMeal" /></a>
            </div>
            @if (Usr.userID == 0)
            {
                <div class="FlexContainer SignUpLogIn">
                    <div class="flexChild SignIn"><a id="accountSignIn" href="/Account-Login">Log In</a></div>
                    <div class="flexChild SignUp"><a id="accountSignUp" href="/Account-Creation">Sign Up</a></div>
                </div>
            }
            else
            {
                <div class="FlexContainer SignUpLogIn">
                    <button class="SignOut" @onclick="Usr.logOut">Sign Out</button>
                </div>
            }
        </div>
        <div class="DriverInfoAndOrderQueueContainer">
            <div class="YourInfoContainer">
                <h1 class="YourInfo">Your Information:</h1><br />
                <h2 class="DriverName">@Usr.UserFirstName @Usr.UserLastName</h2><br />
                <h2 class="DriverVehicle">@Usr.Color @Usr.Make @Usr.Model</h2>
            </div>
            @if(PrepTime != 0) { 
                <div class="OrderQueueContainer">
                    <table class="OrderQueueTable">
                        <tr>
                            <th>Restaurant Name</th>
                            <th>Prep Time</th>
                        </tr>
                        @for (int i = 0; i < theData.listOfIDs.Count; i++)
                        {
                            int? x = theData.orderPrepTime(theData.listOfIDs[i]);
                            int theID = theData.listOfIDs[i];
                            int q = i;
                            <tr>
                                <td>@theData.listOfRestNames[i]</td>
                                <td>@theData.orderPrepTime(theData.listOfIDs[i])</td>
                                <td><button class="AcceptButton" @onclick="()=>buttonClicked(x,q,theID)">Accept Order</button></td>
                            </tr>
                        }
                    </table>
                </div>
            }
        </div>
        <div class="OrderInfoContainer">
            <div class="OrderInfo">
                <h1>Order Information:</h1><br />
                <h2>Restaurant Name:</h2>
                <p>@RestName</p>
                <h2>Restaurant Address:</h2>
                <p>@RestAddy</p>
                <h2>Customer Name:</h2>
                <p>@CustName</p>
                <h2>Customer Address:</h2>
                <p>@CustAddy</p>
                <h2>Order Number:</h2>
                <p>@orderNum</p>
                <h2>Prep Time:</h2>
                <p>@PrepTime</p>
            </div>
            <div class="OrderStatusContainer">
                <button class="done AcceptButton" @onclick="orderDone">Order Complete</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string mySetting;
    DataUploadModel theData = new DataUploadModel();
    private string RestName;
    private string RestAddy;
    private string CustName;
    private string CustAddy;
    private int? PrepTime;
    private int orderNum;
    private int orderID;
    int status = 0;

    // on load -> call this func
    private void initMethod()
    {
        mySetting = _config.GetValue<string>("MySetting"); //on load get hidden connection string from appsettings.json
        theData.connect = mySetting;
        theData.getOrders();
        theData.getOrderInfo();
    }

    private void buttonClicked(int? x, int q, int theID)
    {
        orderID = theID;
        RestName = theData.listOfRestNames[q];
        RestAddy = theData.listOfRestAddy[q];
        CustName = theData.listOfCustName[q];
        CustAddy = theData.listOfCustAddy[q];
        PrepTime = x;
        orderNum = theData.listOfIDs[q];
    }

    private void orderDone() {
        status = 1;
        Console.WriteLine(status);
        theData.orderDone(status, orderNum);
        NavigationManager.NavigateTo("/Driver-Dashboard", true);
    }

    // on load
    protected override async Task OnInitializedAsync()
    {
        initMethod();
    }
}
