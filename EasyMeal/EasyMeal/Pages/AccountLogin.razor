@page "/Account-Login"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IConfiguration _config
@inject NavigationManager NavigationManager
@inject User Usr

<link href="css/AccountLogin.css" rel="stylesheet" />

<div class="MainContainer">
    <div class="LogoContainer">
        <a href=""><img class="logo" src="/Assets/Logo.svg" alt="EasyMeal" /></a>
    </div>

    <div class="ErrorMessageContainer" id="@hidden">
        <div class="ErrorMessage">
            <img class="ErrorIcon" src="/Assets/AccountLogin/Error.svg" />
            <h3 id="errorHeading">Error!</h3>
            <p id="errorText">You did not enter the correct credentials OR there is no account associated with this email.</p>
            <p id="errorText"><a id="errorLink" href="/Account-Creation">Consider making an account if you didn't already!</a></p>
        </div>
    </div>

    <div class="AccountFieldsContainer">
        <h1 id="logIn">Log In</h1>
        <form class="AccountFieldsForm" @onsubmit="submitFields">
            <div class="EmailPhonePassContainer">
                <label id="emailAddress">Email Address</label> <br />
                <input type="email" @bind-value="email" class="EmailInput" required /> <br />

                <label id="password">Password</label> <br />
                <input type="password" @bind-value="password" class="PassWordInput" required />
            </div>
            <div class="FormSubmitButtonContainer">
                <button type="submit" class="FormSubmitButton">Log In</button>
            </div>
            <p id="NeedAccountText">Don't have an account? &nbsp&nbsp<a href="/Account-Creation">Create Account</a></p>
        </form>
    </div>

</div>

@code {
    private string email;
    private string password;
    private string mySetting = "";
    private string hidden = "hidden";

    // form input logic
    private void submitFields()
    {
        Usr.connect = mySetting;
        Usr.email = email;
        Usr.password = password;
        //when decrypting use Encrypt.hashString(password)
        Usr.logIn();
        // make sure the person valid
        if (Usr.check == true)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            hidden = "";
        }
    }

    // on load -> call this func
    private void initMethod()
    {
        mySetting = _config.GetValue<string>("MySetting"); //on load get hidden connection string from appsettings.json
    }

    // on load
    protected override async Task OnInitializedAsync()
    {
        initMethod();
    }
}